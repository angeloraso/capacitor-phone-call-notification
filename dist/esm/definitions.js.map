{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PermissionState, PluginListenerHandle } from '@capacitor/core';\n\nexport type NotificationType = 'incoming' | 'inProgress' | 'missed';\nexport type NotificationResponse = 'tap' | 'answer' | 'decline' | 'terminate' | 'hold';\n\nexport interface PermissionStatus {\n  display: PermissionState;\n}\nexport interface IncomingPhoneCallNotificationSettings {\n    icon: string;\n    picture: string;\n    callWaiting: boolean;\n    declineButtonText: string;\n    declineButtonColor: string;\n    answerButtonText: string;\n    answerButtonColor: string;\n    terminateAndAnswerButtonText: string;\n    terminateAndAnswerButtonColor: string;\n    terminateButtonText: string;\n    terminateButtonColor: string;\n    declineCallWaitingButtonText: string;\n    declineCallWaitingButtonColor: string;\n    holdButtonText: string;\n    holdButtonColor: string;\n    holdAndAnswerButtonText: string;\n    holdAndAnswerButtonColor: string;\n    color: string;\n    duration: number;\n    channelName: string;\n    channelDescription: string;\n    callingName: string;\n    callingNumber: string;\n}\n\nexport interface CallInProgressNotificationSettings {\n  icon: string;\n  picture: string;\n  terminateButtonText: string;\n  terminateButtonColor: string;\n  holdButtonText: string;\n  holdButtonColor: string;\n  color: string;\n  duration: number;\n  channelName: string;\n  channelDescription: string;\n  callingName: string;\n  callingNumber: string;\n}\nexport interface PhoneCallNotificationPlugin {\n  showIncomingPhoneCallNotification(data?: Partial<IncomingPhoneCallNotificationSettings>): Promise<void>;\n  showCallInProgressNotification(data?: Partial<CallInProgressNotificationSettings>): Promise<void>;\n  hideIncomingPhoneCallNotification(): Promise<void>;\n  hideCallInProgressNotification(): Promise<void>;\n  checkPermissions(): Promise<PermissionStatus>;\n  requestPermissions(): Promise<PermissionStatus>;\n  addListener(\n    eventName: 'response',\n    listenerFunc: (data: { response: NotificationResponse }) => void,\n  ): Promise<PluginListenerHandle>;\n  removeAllListeners(): Promise<void>;\n}\n"]}